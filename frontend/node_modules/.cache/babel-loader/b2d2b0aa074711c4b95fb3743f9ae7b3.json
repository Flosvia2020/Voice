{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\Voice\\\\frontend\\\\src\\\\Components\\\\main\\\\Main.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { HeaderContainer, WriteBtn, Posts, Container } from \"../../Style/Main\";\nimport Post from \"./Post\";\nimport WriteModal from \"./WriteModal\";\nimport client from \"../../api/client\";\nimport { Cookies } from \"react-cookie\";\nimport jwt_decode from \"jwt-decode\";\nconst GlobalStyle = createGlobalStyle`\nbody{\n  margin:0;\n  padding:0;\n}\n`;\n\nconst Main = () => {\n  const [writeVisible, setWriteVisible] = useState(false);\n  const posts = [];\n  const LIST_URL = \"api/post/list\";\n  const CHECK_URL = \"api/auth/check\";\n  const LOGOUT_URL = \"api/auth/logout\";\n  const cookie = new Cookies();\n  const EXP = jwt_decode(cookie.get(\"token\")).exp;\n\n  if (EXP * 1000 < Date.now()) {\n    cookie.remove(\"token\");\n    client.get(CHECK_URL, {\n      Headers: {\n        \"access-token\": \"\",\n        \"refresh-token\": cookie.get(\"refreshToken\")\n      }\n    }).then(res => cookie.set(\"token\", res.info));\n  }\n\n  const callApi = async () => {\n    client.get(LIST_URL).then(res => posts.push(res.data)).then(posts.map((element, i) => /*#__PURE__*/React.createElement(Post, {\n      key: i,\n      nickName: element.user_nickname,\n      id: element.user_id,\n      title: element.title,\n      contents: element.contents,\n      img: element.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const onWriteClick = () => {\n    setWriteVisible(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"VOICE\")), /*#__PURE__*/React.createElement(WriteModal, {\n    visible: writeVisible,\n    setVisible: setWriteVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(WriteBtn, {\n    onClick: onWriteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Main;","map":{"version":3,"sources":["C:/Project/Voice/frontend/src/Components/main/Main.js"],"names":["React","useState","useEffect","createGlobalStyle","HeaderContainer","WriteBtn","Posts","Container","Post","WriteModal","client","Cookies","jwt_decode","GlobalStyle","Main","writeVisible","setWriteVisible","posts","LIST_URL","CHECK_URL","LOGOUT_URL","cookie","EXP","get","exp","Date","now","remove","Headers","then","res","set","info","callApi","push","data","map","element","i","user_nickname","user_id","title","contents","img","onWriteClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,SAA3C,QAA4D,kBAA5D;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,MAAMC,WAAW,GAAGV,iBAAkB;AACtC;AACA;AACA;AACA;AACA,CALA;;AAOA,MAAMW,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMgB,KAAK,GAAG,EAAd;AAEA,QAAMC,QAAQ,GAAG,eAAjB;AACA,QAAMC,SAAS,GAAG,gBAAlB;AACA,QAAMC,UAAU,GAAG,iBAAnB;AAEA,QAAMC,MAAM,GAAG,IAAIV,OAAJ,EAAf;AACA,QAAMW,GAAG,GAAGV,UAAU,CAACS,MAAM,CAACE,GAAP,CAAW,OAAX,CAAD,CAAV,CAAgCC,GAA5C;;AAEA,MAAIF,GAAG,GAAG,IAAN,GAAaG,IAAI,CAACC,GAAL,EAAjB,EAA6B;AAC3BL,IAAAA,MAAM,CAACM,MAAP,CAAc,OAAd;AACAjB,IAAAA,MAAM,CACHa,GADH,CACOJ,SADP,EACkB;AACdS,MAAAA,OAAO,EAAE;AACP,wBAAgB,EADT;AAEP,yBAAiBP,MAAM,CAACE,GAAP,CAAW,cAAX;AAFV;AADK,KADlB,EAOGM,IAPH,CAOSC,GAAD,IAAST,MAAM,CAACU,GAAP,CAAW,OAAX,EAAoBD,GAAG,CAACE,IAAxB,CAPjB;AAQD;;AAED,QAAMC,OAAO,GAAG,YAAY;AAC1BvB,IAAAA,MAAM,CACHa,GADH,CACOL,QADP,EAEGW,IAFH,CAESC,GAAD,IAASb,KAAK,CAACiB,IAAN,CAAWJ,GAAG,CAACK,IAAf,CAFjB,EAGGN,IAHH,CAIIZ,KAAK,CAACmB,GAAN,CAAU,CAACC,OAAD,EAAUC,CAAV,kBACR,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,QAAQ,EAAED,OAAO,CAACE,aAFpB;AAGE,MAAA,EAAE,EAAEF,OAAO,CAACG,OAHd;AAIE,MAAA,KAAK,EAAEH,OAAO,CAACI,KAJjB;AAKE,MAAA,QAAQ,EAAEJ,OAAO,CAACK,QALpB;AAME,MAAA,GAAG,EAAEL,OAAO,CAACM,GANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ;AAeD,GAhBD;;AAkBA,QAAMC,YAAY,GAAG,MAAM;AACzB5B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAFF,eAKE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAED,YAArB;AAAmC,IAAA,UAAU,EAAEC,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE4B,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF;AAaD,CA1DD;;AA4DA,eAAe9B,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { HeaderContainer, WriteBtn, Posts, Container } from \"../../Style/Main\";\r\nimport Post from \"./Post\";\r\nimport WriteModal from \"./WriteModal\";\r\nimport client from \"../../api/client\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nconst GlobalStyle = createGlobalStyle`\r\nbody{\r\n  margin:0;\r\n  padding:0;\r\n}\r\n`;\r\n\r\nconst Main = () => {\r\n  const [writeVisible, setWriteVisible] = useState(false);\r\n  const posts = [];\r\n\r\n  const LIST_URL = \"api/post/list\";\r\n  const CHECK_URL = \"api/auth/check\";\r\n  const LOGOUT_URL = \"api/auth/logout\";\r\n\r\n  const cookie = new Cookies();\r\n  const EXP = jwt_decode(cookie.get(\"token\")).exp;\r\n\r\n  if (EXP * 1000 < Date.now()) {\r\n    cookie.remove(\"token\");\r\n    client\r\n      .get(CHECK_URL, {\r\n        Headers: {\r\n          \"access-token\": \"\",\r\n          \"refresh-token\": cookie.get(\"refreshToken\"),\r\n        },\r\n      })\r\n      .then((res) => cookie.set(\"token\", res.info));\r\n  }\r\n\r\n  const callApi = async () => {\r\n    client\r\n      .get(LIST_URL)\r\n      .then((res) => posts.push(res.data))\r\n      .then(\r\n        posts.map((element, i) => (\r\n          <Post\r\n            key={i}\r\n            nickName={element.user_nickname}\r\n            id={element.user_id}\r\n            title={element.title}\r\n            contents={element.contents}\r\n            img={element.img}\r\n          ></Post>\r\n        ))\r\n      );\r\n  };\r\n\r\n  const onWriteClick = () => {\r\n    setWriteVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GlobalStyle />\r\n      <HeaderContainer>\r\n        <div className=\"title\">VOICE</div>\r\n      </HeaderContainer>\r\n      <WriteModal visible={writeVisible} setVisible={setWriteVisible} />\r\n      <Container>\r\n        <Posts></Posts>\r\n        <WriteBtn onClick={onWriteClick}></WriteBtn>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}