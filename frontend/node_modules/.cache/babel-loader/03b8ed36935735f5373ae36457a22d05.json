{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\Voice\\\\frontend\\\\src\\\\Components\\\\login\\\\Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Logo, InputLabel, LinkText, RegularFont } from \"../../Style/Label\";\nimport { ColorButton } from \"../../Style/Button\";\nimport styled from \"styled-components\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport client from \"../../api/client\";\nimport { Cookies } from \"react-cookie\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst Container = styled.div`\n  margin-top: 10%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst LOGIN_URL = \"/api/auth/login\";\n\nconst Login = ({\n  state,\n  beforeLogin,\n  loading,\n  loginSuccess,\n  loginFail\n}) => {\n  const userToken = new Cookies();\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    beforeLogin();\n  }, []);\n\n  const callApi = user => {\n    loading();\n    client.post(LOGIN_URL, user).then(res => {\n      const {\n        token,\n        refreshToken\n      } = res.data;\n      userToken.set(\"token\", token);\n      userToken.set(\"refreshToken\", refreshToken);\n      loginSuccess();\n    }).catch(e => {\n      alert(\"아이디 혹은 비밀번호를 다시 확인해 주세요\");\n      loginFail();\n    });\n  };\n\n  const onHandleSubmit = () => {\n    if (id === \"\" || password === \"\") {\n      alert(\"아이디 혹은 비밀번호를 입력해 주세요.\");\n      return;\n    }\n\n    const user = {\n      id: id,\n      password: password\n    };\n    callApi(user);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, state.isSuccess && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"VOICE\"), /*#__PURE__*/React.createElement(InputLabel, {\n    placeholder: \"ID\",\n    value: id,\n    onChange: e => setId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    type: \"password\",\n    placeholder: \"PASSWORD\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), !state.isLoading ? /*#__PURE__*/React.createElement(ColorButton, {\n    width: \"400px\",\n    height: \"50px\",\n    onClick: onHandleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"LOG IN\") : /*#__PURE__*/React.createElement(CircularProgress, {\n    style: {\n      margin: \"2rem 0\",\n      color: \"#00cdc8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(RegularFont, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \" \\uC544\\uC9C1 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/Signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinkText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\\uD558\\uB7EC\\uAC00\\uAE30\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Project/Voice/frontend/src/Components/login/Login.js"],"names":["React","useState","useEffect","Logo","InputLabel","LinkText","RegularFont","ColorButton","styled","Link","Redirect","client","Cookies","CircularProgress","Container","div","LOGIN_URL","Login","state","beforeLogin","loading","loginSuccess","loginFail","userToken","id","setId","password","setPassword","callApi","user","post","then","res","token","refreshToken","data","set","catch","e","alert","onHandleSubmit","isSuccess","target","value","isLoading","margin","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Logo, InputLabel, LinkText, RegularFont } from \"../../Style/Label\";\r\nimport { ColorButton } from \"../../Style/Button\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport client from \"../../api/client\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nconst Container = styled.div`\r\n  margin-top: 10%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst LOGIN_URL = \"/api/auth/login\";\r\n\r\nconst Login = ({ state, beforeLogin, loading, loginSuccess, loginFail }) => {\r\n  const userToken = new Cookies();\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    beforeLogin();\r\n  }, []);\r\n\r\n  const callApi = (user) => {\r\n    loading();\r\n\r\n    client\r\n      .post(LOGIN_URL, user)\r\n      .then((res) => {\r\n        const { token, refreshToken } = res.data;\r\n        userToken.set(\"token\", token);\r\n        userToken.set(\"refreshToken\", refreshToken);\r\n        loginSuccess();\r\n      })\r\n      .catch((e) => {\r\n        alert(\"아이디 혹은 비밀번호를 다시 확인해 주세요\");\r\n        loginFail();\r\n      });\r\n  };\r\n  const onHandleSubmit = () => {\r\n    if (id === \"\" || password === \"\") {\r\n      alert(\"아이디 혹은 비밀번호를 입력해 주세요.\");\r\n      return;\r\n    }\r\n    const user = {\r\n      id: id,\r\n      password: password,\r\n    };\r\n    callApi(user);\r\n  };\r\n  return (\r\n    <Container>\r\n      {state.isSuccess && <Redirect to=\"/Main\" />}\r\n      <Logo>VOICE</Logo>\r\n      <InputLabel\r\n        placeholder=\"ID\"\r\n        value={id}\r\n        onChange={(e) => setId(e.target.value)}\r\n      />\r\n      <InputLabel\r\n        type=\"password\"\r\n        placeholder=\"PASSWORD\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      {!state.isLoading ? (\r\n        <ColorButton width=\"400px\" height=\"50px\" onClick={onHandleSubmit}>\r\n          LOG IN\r\n        </ColorButton>\r\n      ) : (\r\n        <CircularProgress style={{ margin: \"2rem 0\", color: \"#00cdc8\" }} />\r\n      )}\r\n\r\n      <RegularFont> 아직 회원이 아니신가요?</RegularFont>\r\n      <Link to=\"/Signup\">\r\n        <LinkText>SIGN UP하러가기</LinkText>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}